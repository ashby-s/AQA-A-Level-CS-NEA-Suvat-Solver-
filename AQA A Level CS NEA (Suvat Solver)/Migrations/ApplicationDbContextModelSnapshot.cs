// <auto-generated />
using AQA_A_Level_CS_NEA__Suvat_Solver_.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AQA_A_Level_CS_NEA__Suvat_Solver_.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Question", b =>
                {
                    b.Property<int>("QuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestId"), 1L, 1);

                    b.Property<float>("AnswTrue")
                        .HasColumnType("real");

                    b.Property<string>("AnswType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestSolved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.QuestiontoCourses", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionQuestId")
                        .HasColumnType("int");

                    b.HasKey("QuestId", "CourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("QuestionQuestId");

                    b.ToTable("QuestiontoCourses");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("UserCorrectAnsw")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTotalAnsw")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.UsertoCourses", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("UsertoCourses");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.QuestiontoCourses", b =>
                {
                    b.HasOne("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Course", "Course")
                        .WithMany("QuestiontoCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Question", "Question")
                        .WithMany("QuestiontoCourses")
                        .HasForeignKey("QuestionQuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.UsertoCourses", b =>
                {
                    b.HasOne("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Course", "Course")
                        .WithMany("UsertoCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.User", "User")
                        .WithMany("UsertoCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Course", b =>
                {
                    b.Navigation("QuestiontoCourses");

                    b.Navigation("UsertoCourses");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.Question", b =>
                {
                    b.Navigation("QuestiontoCourses");
                });

            modelBuilder.Entity("AQA_A_Level_CS_NEA__Suvat_Solver_.Models.User", b =>
                {
                    b.Navigation("UsertoCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
